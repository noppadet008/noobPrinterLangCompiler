Language design

1.1. ค่าคงที่
1.1.1.แบบจำนวนเต็มฐาน 10    	เช่น  2123121 , 3 , 0 ,99999 , 5
1.1.2 แบบจำนวนเต็มฐาน 16	เช่น  x123 , xAA , xAC

1.2. ตัวแปรพื้นฐาน (กำหนดไม่ต่ำกว่า 26 ตัวแปร)  แบบจำนวนเต็มคิดเครื่องหมายขนาด 64 บิต
1.2.1 $var[0-25] 			เช่น   $var1 , $var24 

1.3. นิพจน์คำนวณจำนวนเต็ม
1.3.1.ติดลบ  “ -ค่าคงที “		เช่น -1 , -78 , -199
1.3.2.คูณ  “ * ”			เช่น 2 * 2
1.3.3 หารเอาส่วน  “ / “		เช่น 99 / 9
1.3.4 หารเอาเศษ   “ % “		เช่น 99 % 9
1.3.5.บวก “ + “ 			เช่น 1 + 1
1.3.6 ลบ  “ – “   		เช่น  4 - 2
1.3.7.วงเล็บ “( statement ) “	เช่น (5 - 5) + 89

1.4. ประโยคคำสั่งที่ทำตามลำดับ
1.4.1.ให้ค่าแก่ตัวแปร (assignment) จากข้อ 1.1 1.2 และ 1.3   “=” 	   เช่น   $var5  = 7
1.4.2.แสดงค่าตัวแปรโดดแบบฐาน 10 		“printer ตัวแปร”   เช่น   printer $var5
1.4.3 แสดงค่าตัวแปรโดดแบบฐาน 16		“printer ตัวแปร”   เช่น   printer $var5
1.4.3.แสดงสายอักษรที่กำหนด (ยาวไม่เกิน 128 ตัว)    “printer Text”      เช่น   printer cekmitl
1.4.4.แสดงอักษรขึ้นบรรทัดใหม่ (อาจรวบไว้ในข้อ 1.4.3 ก็ได้) “\n”	   เช่น   printer ce \n kmitl

 
1.5. ประโยคคำสั่งตัดสินใจ
1.5.1.เทียบค่าว่าเท่ากันหรือไม่ (ไม่มีเทียบซ้อน ไม่มีการคำนวณบูลีน) “#”	   เช่น  $var5 # 5
	โดยค่าที่ให้ออกมามีค่าเป็น 1 เมื่อเท่ากัน
    เป็น 0 เมื่อไม่เท่ากัน
1.5.2 ประโยคเงื่อนไข  “when ค่าคงที่ { statement }” โดยทำประโยคเงื่อนไขเมื่อค่าคงที่ไม่เป็น 0 เช่น
when $var9 {
	…..
}

หรือ

when $var9 # 45 {
	……..
}

1.6. ประโยคคำสั่งวนซ้ำ
1.6.1.วนซ้ำตามตั้งแต่ค่าต่ำสุดถึงค่าสูงสุด (ไม่มีวนซ้ำซ้อน)   “loop ประโยคเงื่อนไข { statement }“
 	loop when $var4 # 5 {
		……..
}
หรือ
$var25 = 3;
loop when $var25 {
	……
}
เพื่อที่ทำ statement ใน loop 

1.7 comment 
1.7.1 แบบบรรทัดเดียว “^^ sometext” 		เช่น   ^^ this is a comment.
1.7.2 แบบหลายบรรทัด “^_^ sometext  ^_^” 	เช่น

^_^
This code is a printer language
Please enjoy my lang.
^_^
